apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sidewinder.fullname" . }}-server
  labels:
    {{- include "sidewinder.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "sidewinder.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/global-secret.yaml") . | sha256sum }}
        checksum/tls: {{ include (print $.Template.BasePath "/tls-secret.yaml") . | sha256sum }}
        {{- with .Values.server.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "sidewinder.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: host-path-volume
          hostPath:
            path: /nvme/disk
        - name: security-volume
          secret:
            secretName: {{ include "sidewinder.fullname" . }}-secret
            optional: false
        - name: tls-volume
          secret:
            secretName: {{ include "sidewinder.fullname" . }}-tls-secret
            optional: false
      {{- with .Values.server.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.server.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          command: [ "/bin/bash" ]
          # args: [ "-c", "sleep infinity" ]
          args: [ "-c", "sidewinder-server" ]
          volumeMounts:
            - name: host-path-volume
              mountPath: /opt/sidewinder/data
            - name: security-volume
              mountPath: /opt/sidewinder/security/user_list.json
              subPath: user_list.json
            - name: manifest-volume
              mountPath: {{ .Values.server.config.shardManifestFile }}
              subPath: shard_manifest.json
            - name: tls-volume
              mountPath: /opt/sidewinder/tls
              readOnly: true
          env:
            - name: DATABASE_FILE
              value: {{ .Values.server.config.databaseFile }}
            - name: SHARD_MANIFEST_FILE
              value: {{ .Values.server.config.shardManifestFile }}
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "sidewinder.fullname" . }}-secret
                  key: SECRET_KEY
                  optional: false
            - name: TLS
              value: "tls/server.crt tls/server.key"
            - name: PING_TIMEOUT
              value: {{ .Values.server.config.pingTimeout | quote }}
          securityContext:
            {{- toYaml .Values.server.securityContext | nindent 12 }}
          image: "{{ .Values.server.image.repository }}:{{ .Values.server.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          ports:
            - name: websocket
              containerPort: 8765
              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          resources:
            {{- toYaml .Values.server.resources | nindent 12 }}
      {{- with .Values.server.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
