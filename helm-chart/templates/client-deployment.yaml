apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sidewinder.fullname" . }}-client
  labels:
    {{- include "sidewinder.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.client.replicaCount }}
  selector:
    matchLabels:
      {{- include "sidewinder.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.client.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sidewinder.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.client.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.client.podSecurityContext | nindent 8 }}
      volumes:
        - name: tls-volume
          secret:
            secretName: {{ include "sidewinder.fullname" . }}-tls-secret
            optional: false
      containers:
        - name: {{ .Chart.Name }}
          volumeMounts:
            - name: tls-volume
              mountPath: /opt/sidewinder/tls/server.crt
              subPath: server.crt
              readOnly: true
          command: [ "/bin/bash" ]
          args: [ "-c", "sleep infinity" ]
          env:
            - name: SERVER_HOSTNAME
              value: {{ include "sidewinder.fullname" . }}
            - name: CLIENT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "sidewinder.fullname" . }}-secret
                  key: CLIENT_USERNAME
                  optional: false
            - name: CLIENT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "sidewinder.fullname" . }}-secret
                  key: CLIENT_PASSWORD
                  optional: false
            - name: TLS_VERIFY
              value: {{ .Values.client.config.tlsVerify | quote | default "TRUE" }}
          securityContext:
            {{- toYaml .Values.client.securityContext | nindent 12 }}
          image: "{{ .Values.client.image.repository }}:{{ .Values.client.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.client.image.pullPolicy }}
#          ports:
#            - name: http
#              containerPort: 80
#              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          resources:
            {{- toYaml .Values.client.resources | nindent 12 }}
      {{- with .Values.client.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.client.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.client.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
